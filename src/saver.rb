module Wpt
  class Saver
    def initialize(storage)
      @storage = storage
    end

    def save(results)
      @storage.insert(
        name: results['name'],
        type: results['type'],
        url: results['URL'],
        load_time: results["loadTime"],
        ttfb: results["TTFB"],
        bytes_out: results["bytesOut"],
        boutes_out_doc: results["bytesOutDoc"],
        bytes_in: results["bytesIn"],
        butes_in_doc: results["bytesInDoc"],
        connections: results["connections"],
        requests: results["requests"],
        requestsDoc: results["requestsDoc"],
        responses_200: results["responses_200"],
        responses_404: results["responses_404"],
        responses_other: results["responses_other"],
        result: results["result"],
        render: results["render"],
        fully_loaded: results["fullyLoaded"],
        cached: results["cached"],
        doc_time: results["docTime"],
        dom_time: results["domTime"],
        score_cache: results["score_cache"],
        score_cdn: results["score_cdn"],
        score_gzip: results["score_gzip"],
        score_cookies: results["score_cookies"],
        score_keep_alive: results["score_keep-alive"],
        score_minify: results["score_minify"],
        score_combine: results["score_combine"],
        score_compress: results["score_compress"],
        score_etags: results["score_etags"],
        gzip_total: results["gzip_total"],
        gzip_savings: results["gzip_savings"],
        minify_total: results["minify_total"],
        minify_savings: results["minify_savings"],
        image_total: results["image_total"],
        image_savings: results["image_savings"],
        optimization_checked: results["optimization_checked"],
        aft: results["aft"],
        dom_elements: results["domElements"],
        page_speed_version: results["pageSpeedVersion"],
        title: results["title"],
        title_time: results["titleTime"],
        load_event_start: results["loadEventStart"],
        load_event_end: results["loadEventEnd"],
        dom_content_loaded_event_start: results["domContentLoadedEventStart"],
        dom_content_loaded_event_end: results["domContentLoadedEventEnd"],
        last_visual_change: results["lastVisualChange"],
        browser_name: results["browser_name"],
        browser_version: results["browser_version"],
        server_count: results["server_count"],
        server_rtt: results["server_rtt"],
        base_page_cdn: results["base_page_cdn"],
        adult_site: results["adult_site"],
        fixed_viewport: results["fixed_viewport"],
        score_progressive_jpeg: results["score_progressive_jpeg"],
        first_paint: results["firstPaint"],
        doc_cpu_ms: results["docCPUms"],
        fully_loaded_cpu_ms: results["fullyLoadedCPUms"],
        doc_cpu_pct: results["docCPUpct"],
        fully_loaded_cpu_pct: results["fullyLoadedCPUpct"],
        is_responsive: results["isResponsive"],
        date: results["date"],
        speed_index: results["SpeedIndex"],
        visual_complete: results["visualComplete"],
        effective_bps: results["effectiveBps"],
        effective_bpc_doc: results["effectiveBpsDoc"],
      )
    end
  end
end
